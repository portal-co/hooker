{"mappings":"AAEA,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK,EAAE,KAAK,CAAkB,CAAC;AAC1D,0BAA0B,CAAC,SAAS,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,KAAK,YAAY,CAAC,KAAK,CAAC,EAAC,IAAI,GAAE,QAAa,QAkCvJ;AC9BD,OAAO,MAAM,aAAa,OAAO,CAAC,GAAG,EAAE,GAAG,CAE7B,CAAC;AAEd,OAAO,MAAM,QAAQ,OAAO,KAAyB,CAAC;AACtD,OAAO,MAAM,UAAU,OAAO,OACiC,CAAC;AAChE,QAAA,oCAAsC,CAAC;AACvC,2BAA2B;IACzB,OAAO,CAAC,EAAE,eAAe,CAAC;IAC1B,OAAO,CAAC,EAAE,OAAO,CAAC;IAClB,QAAQ,CAAC,EAAE,gBAAgB,CAAC;CAC7B,CAAC;AACF,uBAAuB;IACrB,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,KAAK,CAAC,EAAE,aAAa,CAAC;IACtB,WAAW,CAAC,EAAE,kBAAkB,CAAC;CAClC,GAAG,YAAY,CAAC;AAEjB,qBAAqB,CAAC,SAAS;KAAG,CAAC,IAAI,CAAC,GAAG,MAAM;CAAE,EAAE,CAAC,SAAS,MAAM,CAAC,EACpE,MAAM,EAAE,CAAC,EACT,GAAG,EAAE,CAAC,EACN,MAAM,CAAC,OAAO,EAAE,eAAe,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtD,EACE,UAAkB,EAClB,KAAc,EACd,OAAkB,EAClB,WAA0B,EAC1B,OAAe,EACf,QAAoB,GACrB,GAAE,QAAa,QAyCjB;AACD,yBAAyB,CAAC,SAAS;KAAG,CAAC,IAAI,CAAC,GAAG,GAAG;CAAE,EAAE,CAAC,SAAS,MAAM,CAAC,EACrE,MAAM,EAAE,CAAC,EACT,GAAG,EAAE,CAAC,EACN,MAAM,CACJ,UAAU,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,KAClD,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAClC,EACE,OAAkB,EAClB,OAAe,EACf,QAAoB,GACrB,GAAE,YAAiB,QAOrB;AAED,cAAc,+BAA+B,CAAC","sources":["packages/core/packages/core/events.ts","packages/core/packages/core/index.ts","packages/core/index.ts"],"sourcesContent":[null,null,"import {\n  _WeakMap_prototype,\n  _WeakMap,\n  snapshot,\n  snapshotProto,\n} from \"@portal-solutions/hooker-snap\";\n\nexport const hookProxies: WeakMap<any, any> = _WeakMap\n  ? new _WeakMap()\n  : undefined;\nconst _hookProxies = hookProxies;\nexport const _Proxy: typeof Proxy = globalThis?.Proxy;\nexport const _Reflect: typeof Reflect =\n  \"Reflect\" in globalThis ? { ...Reflect } : (undefined as any);\nconst { isFrozen: _isFrozen } = Object;\nexport type HookPropOpts = {\n  Reflect?: typeof _Reflect;\n  attempt?: boolean;\n  isFrozen?: typeof _isFrozen;\n};\nexport type HookOpts = {\n  isProperty?: boolean;\n  Proxy?: typeof _Proxy;\n  hookProxies?: typeof hookProxies;\n} & HookPropOpts;\n\nexport function hook<T extends { [a in K]: object }, K extends keyof T>(\n  object: T,\n  key: K,\n  hook: (Reflect: typeof _Reflect) => ProxyHandler<T[K]>,\n  {\n    isProperty = false,\n    Proxy = _Proxy,\n    Reflect = _Reflect,\n    hookProxies = _hookProxies,\n    attempt = false,\n    isFrozen = _isFrozen,\n  }: HookOpts = {}\n) {\n  // a[b] = new _Proxy(a[b], c(_Reflect));\n  if (attempt && isFrozen(object)) return;\n  if (isProperty) {\n    hookProp(\n      object,\n      key,\n      (descriptor) => (\n        (descriptor ??= { value: undefined }),\n        {\n          configurable: descriptor?.configurable ?? true,\n          enumerable: descriptor?.enumerable ?? true,\n          writable: descriptor?.writable ?? true,\n          get() {\n            var proxy: T[K], value: T[K];\n            if (descriptor?.get) {\n              proxy = new Proxy((value = descriptor!.get!()), hook(Reflect));\n            } else {\n              proxy = new Proxy((value = descriptor!.value!), hook(Reflect));\n            }\n            _WeakMap_prototype.set(hookProxies, proxy, value);\n            return proxy;\n          },\n          set(value) {\n            while (_WeakMap_prototype.has(hookProxies, value)) {\n              value = _WeakMap_prototype.get(hookProxies, value)!;\n            }\n            if (descriptor?.set) {\n              descriptor!.set!(value);\n            } else {\n              descriptor.value = value;\n            }\n          },\n        }\n      ),\n      { Reflect, attempt, isFrozen }\n    );\n  } else {\n    object[key] = new Proxy(object[key], hook(Reflect));\n  }\n}\nexport function hookProp<T extends { [a in K]: any }, K extends keyof T>(\n  object: T,\n  key: K,\n  hook: (\n    descriptor: TypedPropertyDescriptor<T[K]> | undefined\n  ) => TypedPropertyDescriptor<T[K]>,\n  {\n    Reflect = _Reflect,\n    attempt = false,\n    isFrozen = _isFrozen,\n  }: HookPropOpts = {}\n) {\n  if (attempt && isFrozen(object)) return;\n  const descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n  // if (d !== undefined) {\n  Reflect.defineProperty(object, key, hook(descriptor));\n  // }\n}\nexport * from \"./events.ts\";\nexport * from \"@portal-solutions/hooker-snap\";\n"],"names":[],"version":3,"file":"index.d.ts.map"}