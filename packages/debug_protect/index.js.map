{"mappings":";;;AACA,6BAA6B;AAC7B,MAAM,6BAAO;IAAE,IAAI;AAAK;AACxB,SAAS,sCACP,CAAM,EACN,SACE,QAAQ,CAAA,GAAA,aAAK,YACb,UAAU,CAAA,GAAA,eAAO,GACoC,GAAG,CAAC,CAAC;IAE5D,IAAI,OAAO,MAAM,YAAY,OAAO,MAAM,YAAY;QACpD,IAAK,MAAM,UAAU,2BACnB,IAAI,UAAU,GAAG;YACf,IAAI,IAAI,MAAM,GAAG;gBACf,KAAK,CAAC,GAAG,GAAG;oBACV,IAAI,KAAK,4BAAM,OAAO;oBACtB,OAAO,QAAQ,GAAG,CAAC,GAAG,GAAG;gBAC3B;gBACA,KAAK,CAAC,GAAG,IAAM,CAAE,CAAA,KAAK,0BAAG,KAAM,QAAQ,GAAG,CAAC,GAAG;YAChD;YACA;QACF;IACJ;IACA,OAAO;AACT;AACA,MAAM,iCAA2B;AAC1B,SAAS,0CAAK,SACnB,QAAQ,CAAA,GAAA,aAAK,YACb,UAAU,CAAA,GAAA,eAAO,GACjB,SAAA,WAAU,8BAAQ,WAClB,UAAU,OAMX,GAAG,CAAC,CAAC;IACJ,KAAK,MAAM,OAAO;QAAC;KAAM,CACvB,CAAA,GAAA,WAAG,EACD,UACA,KACA,CAAC,UAAa,CAAA;YACZ,OAAO,CAAC,GAAG,GAAG;gBACZ,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAC5B,CAAC,CAAC,EAAE,GAAG,sCAAgB,CAAC,CAAC,EAAE,EAAE;2BAAE;6BAAO;gBAAQ;gBAEhD,OAAO,QAAQ,KAAK,CAAC,GAAG,GAAG;YAC7B;QACF,CAAA,GACA;eAAE;iBAAO;iBAAS;IAAQ;AAEhC","sources":["packages/debug_protect/index.ts"],"sourcesContent":["import { _Proxy, _Reflect, hook } from \"@portal-solutions/hooker-core\";\n// const { create } = Object;\nconst bobj = { id: true };\nfunction cleanseDevTools(\n  a: any,\n  {\n    Proxy = _Proxy,\n    Reflect = _Reflect,\n  }: { Proxy?: typeof _Proxy; Reflect?: typeof _Reflect } = {}\n): any {\n  if (typeof a === \"object\" || typeof a === \"function\") {\n    for (const banned in bobj)\n      if (banned in a) {\n        a = new Proxy(a, {\n          get: (o, k, r) => {\n            if (k in bobj) return undefined;\n            return Reflect.get(o, k, r);\n          },\n          has: (o, k) => !(k in bobj) && Reflect.has(o, k),\n        });\n        break;\n      }\n  }\n  return a;\n}\nconst _console: typeof console = console;\nexport function init({\n  Proxy = _Proxy,\n  Reflect = _Reflect,\n  console = _console,\n  attempt = false,\n}: {\n  Proxy?: typeof _Proxy;\n  Reflect?: typeof _Reflect;\n  console?: { log: Function };\n  attempt?: boolean;\n} = {}) {\n  for (const key of [\"log\"])\n    hook(\n      console as any,\n      key,\n      (Reflect) => ({\n        apply: (o, t, a) => {\n          for (let i = 0; i < a.length; i++) {\n            a[i] = cleanseDevTools(a[i], { Proxy, Reflect });\n          }\n          return Reflect.apply(o, t, a);\n        },\n      }),\n      { Proxy, Reflect, attempt }\n    );\n}\n"],"names":[],"version":3,"file":"index.js.map"}