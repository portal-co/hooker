{"mappings":"AAEA,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK,EAAE,KAAK,CAAiB,CAAC;AACzD,0BAA0B,CAAC,SAAS,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,KAAK,YAAY,CAAC,KAAK,CAAC,QAkCnI;AC/BD,OAAO,MAAM,aAAa,OAAO,CAAC,GAAG,EAAE,GAAG,CAAiB,CAAC;AAC5D,OAAO,MAAM,QAAQ,OAAO,KAAyB,CAAC;AACtD,OAAO,MAAM,UAAU,OAAO,OAAqE,CAAC;AAEpG,qBAAqB,CAAC,SAAS;KAAG,CAAC,IAAI,CAAC,GAAG,MAAM;CAAE,EAAE,CAAC,SAAS,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,eAAe,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,UAAkB,EAAE,KAAc,EAAE,OAAkB,EAAE,GAAE;IAAE,UAAU,CAAC,EAAE,OAAO,CAAC;IAAC,KAAK,CAAC,EAAE,aAAa,CAAC;IAAC,OAAO,CAAC,EAAE,eAAe,CAAA;CAAO,QA+BnR;AACD,yBAAyB,CAAC,SAAS;KAAG,CAAC,IAAI,CAAC,GAAG,GAAG;CAAE,EAAE,CAAC,SAAS,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,KAAK,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,OAAkB,EAAE,GAAE;IAAE,OAAO,CAAC,EAAE,eAAe,CAAA;CAAO,QAKlO;AAED,cAAc,+BAA+B,CAAA","sources":["core/core/events.ts","core/core/index.ts","core/index.ts"],"sourcesContent":[null,null,"import { _WeakMap_prototype, snapshot, snapshotProto } from '@portal-solutions/hooker-snap';\n\n\n\n\n\nexport const hookProxies: WeakMap<any, any> = new WeakMap();\nexport const _Proxy: typeof Proxy = globalThis?.Proxy;\nexport const _Reflect: typeof Reflect = 'Reflect' in globalThis ? { ...Reflect } : undefined as any;\n\nexport function hook<T extends { [a in K]: object }, K extends keyof T>(a: T, b: K, c: (Reflect: typeof _Reflect) => ProxyHandler<T[K]>, { isProperty = false, Proxy = _Proxy, Reflect = _Reflect }: { isProperty?: boolean, Proxy?: typeof _Proxy, Reflect?: typeof _Reflect } = {}) {\n    // a[b] = new _Proxy(a[b], c(_Reflect));\n    if (isProperty) {\n        hookProp(a, b, d => ((d ??= { value: undefined }), {\n            configurable: d?.configurable ?? true,\n            enumerable: d?.enumerable ?? true,\n            writable: d?.writable ?? true,\n            get() {\n                var p: T[K], v: T[K];\n                if (d?.get) {\n                    p = new (Proxy)(v = d!.get!(), c(Reflect));\n                } else {\n                    p = new (Proxy)(v = d!.value!, c(Reflect));\n                }\n                _WeakMap_prototype.set(hookProxies, p, v);\n                return p;\n            },\n            set(value) {\n                while (_WeakMap_prototype.has(hookProxies, value)) {\n                    value = _WeakMap_prototype.get(hookProxies, value)!;\n                }\n                if (d?.set) {\n                    d!.set!(value)\n                } else {\n                    d.value = value;\n                }\n            }\n        }), { Reflect });\n    } else {\n        a[b] = new (Proxy)(a[b], c(Reflect));\n    }\n}\nexport function hookProp<T extends { [a in K]: any }, K extends keyof T>(a: T, b: K, c: (d: TypedPropertyDescriptor<T[K]> | undefined) => TypedPropertyDescriptor<T[K]>, { Reflect = _Reflect }: { Reflect?: typeof _Reflect } = {}) {\n    let d = Reflect.getOwnPropertyDescriptor(a, b);\n    // if (d !== undefined) {\n    Reflect.defineProperty(a, b, c(d));\n    // }\n}\nexport * from './events.ts'\nexport * from '@portal-solutions/hooker-snap'"],"names":[],"version":3,"file":"index.d.ts.map"}