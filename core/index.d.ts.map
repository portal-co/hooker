{"mappings":"AAEA,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK,EAAE,KAAK,CAAkB,CAAC;AAC1D,0BAA0B,CAAC,SAAS,WAAW,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,KAAK,YAAY,CAAC,KAAK,CAAC,EAAC,IAAI,GAAE,QAAa,QAkCvJ;ACnCD,OAAO,MAAM,aAAa,OAAO,CAAC,GAAG,EAAE,GAAG,CAAyC,CAAC;AAEpF,OAAO,MAAM,QAAQ,OAAO,KAAyB,CAAC;AACtD,OAAO,MAAM,UAAU,OAAO,OAAqE,CAAC;AACpG,uBAAuB;IAAE,UAAU,CAAC,EAAE,OAAO,CAAC;IAAC,KAAK,CAAC,EAAE,aAAa,CAAC;IAAC,OAAO,CAAC,EAAE,eAAe,CAAC;IAAC,WAAW,CAAC,EAAE,kBAAkB,CAAA;CAAE,CAAC;AACpI,qBAAqB,CAAC,SAAS;KAAG,CAAC,IAAI,CAAC,GAAG,MAAM;CAAE,EAAE,CAAC,SAAS,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,eAAe,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,UAAkB,EAAE,KAAc,EAAE,OAAkB,EAAE,WAA0B,EAAE,GAAE,QAAa,QA+BvP;AACD,yBAAyB,CAAC,SAAS;KAAG,CAAC,IAAI,CAAC,GAAG,GAAG;CAAE,EAAE,CAAC,SAAS,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,KAAK,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,OAAkB,EAAE,GAAE;IAAE,OAAO,CAAC,EAAE,eAAe,CAAA;CAAO,QAKrP;AAED,cAAc,+BAA+B,CAAA","sources":["core/core/events.ts","core/core/index.ts","core/index.ts"],"sourcesContent":[null,null,"import { _WeakMap_prototype, _WeakMap, snapshot, snapshotProto } from '@portal-solutions/hooker-snap';\n\nexport const hookProxies: WeakMap<any, any> = _WeakMap ? new _WeakMap() : undefined;\nconst _hookProxies = hookProxies;\nexport const _Proxy: typeof Proxy = globalThis?.Proxy;\nexport const _Reflect: typeof Reflect = 'Reflect' in globalThis ? { ...Reflect } : undefined as any;\nexport type HookOpts = { isProperty?: boolean, Proxy?: typeof _Proxy, Reflect?: typeof _Reflect, hookProxies?: typeof hookProxies };\nexport function hook<T extends { [a in K]: object }, K extends keyof T>(object: T, key: K, hook: (Reflect: typeof _Reflect) => ProxyHandler<T[K]>, { isProperty = false, Proxy = _Proxy, Reflect = _Reflect, hookProxies = _hookProxies }: HookOpts = {}) {\n    // a[b] = new _Proxy(a[b], c(_Reflect));\n    if (isProperty) {\n        hookProp(object, key, descriptor => ((descriptor ??= { value: undefined }), {\n            configurable: descriptor?.configurable ?? true,\n            enumerable: descriptor?.enumerable ?? true,\n            writable: descriptor?.writable ?? true,\n            get() {\n                var proxy: T[K], value: T[K];\n                if (descriptor?.get) {\n                    proxy = new (Proxy)(value = descriptor!.get!(), hook(Reflect));\n                } else {\n                    proxy = new (Proxy)(value = descriptor!.value!, hook(Reflect));\n                }\n                _WeakMap_prototype.set(hookProxies, proxy, value);\n                return proxy;\n            },\n            set(value) {\n                while (_WeakMap_prototype.has(hookProxies, value)) {\n                    value = _WeakMap_prototype.get(hookProxies, value)!;\n                }\n                if (descriptor?.set) {\n                    descriptor!.set!(value)\n                } else {\n                    descriptor.value = value;\n                }\n            }\n        }), { Reflect });\n    } else {\n        object[key] = new (Proxy)(object[key], hook(Reflect));\n    }\n}\nexport function hookProp<T extends { [a in K]: any }, K extends keyof T>(object: T, key: K, hook: (descriptor: TypedPropertyDescriptor<T[K]> | undefined) => TypedPropertyDescriptor<T[K]>, { Reflect = _Reflect }: { Reflect?: typeof _Reflect } = {}) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n    // if (d !== undefined) {\n    Reflect.defineProperty(object, key, hook(descriptor));\n    // }\n}\nexport * from './events.ts'\nexport * from '@portal-solutions/hooker-snap'"],"names":[],"version":3,"file":"index.d.ts.map"}