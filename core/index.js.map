{"mappings":"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","sources":["core/index.ts","core/extras.ts"],"sourcesContent":["export let _Proxy = Proxy;\nexport let _Reflect: typeof Reflect = { ...Reflect };\nexport let hookProxies: WeakMap<any, any> = new WeakMap();\nexport function snapshot<T, U, V>(fn: (this: T, ...U) => V): (self: T, ...U) => V {\n    return fn.call.bind(fn);\n}\nexport type SnapshotInput<T, U, V> = (this: T, ...U) => V;\nexport type ProtoSnapshot<T> = { [Prop in keyof T]: T[Prop] extends SnapshotInput<infer T2, infer U, infer V> ? (self: T2, ...U) => V : never };\nexport function snapshotProto<T extends object>(val: T): ProtoSnapshot<T> {\n    let a = {};\n    for (let k of Object.keys(val)) {\n        a[k] = snapshot(val[k])\n    }\n    return a as ProtoSnapshot<T>;\n}\n\nexport function hook<T extends { [a in K]: object }, K extends keyof T>(a: T, b: K, c: (Reflect: typeof _Reflect) => ProxyHandler<T[K]>) {\n    // a[b] = new _Proxy(a[b], c(_Reflect));\n    hookProp(a, b, d => ((d = d || { value: undefined }), {\n        configurable: d?.configurable ?? true,\n        enumerable: d?.enumerable ?? true,\n        writable: d?.writable ?? true,\n        get() {\n            var p: T[K], v: T[K];\n            if (d?.get) {\n                p = new _Proxy(v = d!.get!(), c(_Reflect));\n            } else {\n                p = new _Proxy(v = d!.value!, c(_Reflect));\n            }\n            hookProxies.set(p, v);\n            return p;\n        },\n        set(value) {\n            while (hookProxies.has(value)) {\n                value = hookProxies.get(value)!;\n            }\n            if (d?.set) {\n                d!.set!(value)\n            } else {\n                d.value = value;\n            }\n        }\n    }));\n}\nexport function hookProp<T extends { [a in K]: any }, K extends keyof T>(a: T, b: K, c: (d: TypedPropertyDescriptor<T[K]> | undefined) => TypedPropertyDescriptor<T[K]>) {\n    let d = _Reflect.getOwnPropertyDescriptor(a, b);\n    // if (d !== undefined) {\n    _Reflect.defineProperty(a, b, c(d));\n    // }\n}\nexport let events: WeakMap<Event, Event> = new WeakMap();\nexport function hookEvent<T extends EventTarget>(ev: T, event_proxy: (Reflect: typeof _Reflect, name: string) => ProxyHandler<Event>) {\n    let m: WeakMap<any, any> = new WeakMap();\n    hook(ev, \"addEventListener\", Reflect => ({\n        apply(target, thisArg, argArray) {\n            let handler = argArray[1];\n            let name;\n            let h2 = $ => {\n                let e = new _Proxy($, event_proxy(Reflect, name));\n                events.set(e, $);\n                handler(e);\n            };\n            m.set(handler, h2);\n            return Reflect.apply(target, thisArg, [name = argArray[0], h2]);\n        },\n    }));\n    hook(ev, \"removeEventListener\", Reflect => ({\n        apply(target, thisArg, argArray) {\n            let handler = argArray[1];\n            let h2 = m.get(handler);\n            m.delete(handler);\n            return Reflect.apply(target, thisArg, [argArray[0], h2]);\n        },\n    }));\n    if (ev instanceof EventSource) {\n        hook(ev, \"dispatchEvent\", Reflect => ({\n            apply(target, thisArg, argArray) {\n                var ev = argArray[0];\n                if (events.has(ev)) {\n                    ev = events.get(ev)!;\n                }\n                return Reflect.apply(target, thisArg, [ev])\n            },\n        }));\n    }\n}\nexport * from './extras.ts'","\nimport { snapshotProto } from \"./index.ts\";\n\nexport const _DataView = DataView;\nexport const _DataView_prototype = snapshotProto(_DataView.prototype) \n\n\nexport const _ArrayBuffer = ArrayBuffer;\n\n\n\nexport const _Uint8Array = Uint8Array;\nexport const _Uint8Array_prototype = snapshotProto(_Uint8Array.prototype) \n\n"],"names":[],"version":3,"file":"index.js.map"}